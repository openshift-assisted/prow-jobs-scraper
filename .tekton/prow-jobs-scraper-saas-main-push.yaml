apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/openshift-assisted/prow-jobs-scraper?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch == "main"
  creationTimestamp:
  labels:
    appstudio.openshift.io/application: prow-jobs-scraper-saas-main
    appstudio.openshift.io/component: prow-jobs-scraper-saas-main
    pipelines.appstudio.openshift.io/type: build
  name: prow-jobs-scraper-saas-main-on-push
  namespace: assisted-installer-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/assisted-installer-tenant/prow-jobs-scraper-saas-main/prow-jobs-scraper-saas-main:{{revision}}
  - name: dockerfile
    value: Dockerfile
  - name: path-context
    value: .
  - name: build-args
    value:
    - release={{target_branch}
    - version={{revision}}
  - name: send-slack-webhook-notification-on-fail
    value: "true"
  - name: slack-webhook-notification-secret
    value: slack-notif-webhook
  - name: slack-webhook-notification-secret-key
    value: token
  - name: slack-webhook-notification-message
    value: "[SaaS] [prow-jobs-scraper] [{{revision}}] [<https://konflux-ui.apps.stone-prd-rh01.pg1f.p1.openshiftapps.com/ns/assisted-installer-tenant/applications/prow-jobs-scraper-saas-main/pipelineruns/$(context.pipelineRun.name)|pipeline>] Konflux build failed"
  pipelineRef:
    resolver: git
    params:
      - name: url
        value: "https://github.com/openshift-assisted/assisted-installer-konflux-pipelines.git"
      - name: revision
        value: main
      - name: pathInRepo
        value: "pipelines/standard-pipeline.yaml"
  taskRunTemplate:
    serviceAccountName: build-pipeline-prow-jobs-scraper-saas-main
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
